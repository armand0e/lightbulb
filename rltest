import requests
from easy_pil import Editor, Canvas, Font

def fetch_player_data(epic_id):
    url = f"https://api.tracker.gg/api/v2/rocket-league/standard/profile/epic/{epic_id}"
    headers = {
        'TRN-Api-Key': 'f408855b-5293-4e1f-8432-89686e3fb2cb',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36',
        'Accept': 'application/json, text/plain, */*',
        'Referer': 'https://tracker.gg/',
    }
    try:
        response = requests.get(url, headers=headers)
        print(f"Status Code: {response.status_code}")  # Debug: print status code
        print(f"Response Content: {response.text}")  # Debug: print response content

        if response.status_code == 200:
            return response.json()
        elif response.status_code == 403:
            print("Access forbidden. Ensure your TRN-Api-Key is correct and has the right permissions.")
        elif response.status_code == 404:
            print("Player not found. Please check the Epic ID.")
        elif response.status_code == 429:
            print("Rate limit exceeded. Please try again later.")
        else:
            print("Unexpected error occurred.")
    except requests.exceptions.RequestException as e:
        print(f"Request failed: {e}")
    return None

def generate_image(data, output_path="output.png"):
    # Set up the canvas and fonts
    background = Canvas((800, 450), color="#1a1a1a")
    editor = Editor(background)
    
    # Define fonts
    header_font = Font.poppins(size=30, variant="bold")
    text_font = Font.poppins(size=20)
    
    # Get player's name
    player_name = data['data']['platformInfo']['platformUserHandle']
    editor.text((20, 20), player_name, font=header_font, color="white")

    # Example playlist data extraction (adjust for specific data you want)
    segments = data['data']['segments']
    playlists = ["Duel", "Doubles", "Standard", "Tournament"]
    start_y = 80
    for playlist_name in playlists:
        for segment in segments:
            if segment['metadata']['name'].lower() in playlist_name.lower():
                mmr = segment['stats']['rating']['displayValue']
                rank = segment['stats']['tier']['metadata']['name']
                win_streak = segment['stats']['winStreak']['displayValue']

                # Draw the playlist data on the image
                editor.text((20, start_y), f"{playlist_name}: {rank} - {mmr} MMR - Streak: {win_streak}", 
                            font=text_font, color="white")
                start_y += 40

    # Save the output image
    editor.save(output_path)
    print(f"Image saved to {output_path}")

if __name__ == "__main__":
    epic_id = input("Enter the Epic ID: ")
    data = fetch_player_data(epic_id)
    if data:
        generate_image(data)
